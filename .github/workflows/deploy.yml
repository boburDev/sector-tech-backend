name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Upload code
        uses: actions/checkout@v4

      - name: Configure SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
        shell: bash

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} "echo 'SSH Connection Successful'"

      - name: Check and Install Node.js, npm, and PM2 if needed
        run: |
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
          echo "Checking if Node.js, npm, and PM2 are installed..."

          if ! command -v node &> /dev/null; then
            echo "Node.js not found. Installing..."
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
          else
            echo "Node.js is already installed."
          fi

          if ! command -v npm &> /dev/null; then
            echo "npm not found. Installing..."
            sudo apt-get install -y npm
          else
            echo "npm is already installed."
          fi

          if ! command -v pm2 &> /dev/null; then
            echo "PM2 not found. Installing..."
            npm install -g pm2
          else
            echo "PM2 is already installed."
          fi
          EOF

      - name: Deploy to server
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USERNAME }}
          APP_DIR: /root/sertor_technology/sector-tech-backend
          PORT: ${{ secrets.PORT }}
          G_TOKEN: ${{ secrets.G_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
          sudo mkdir -p $APP_DIR
          sudo chown -R $USER:$USER $APP_DIR

          if [ ! -d $APP_DIR/.git ]; then
            git clone https://${G_TOKEN}@github.com/boburDev/sector-tech-backend.git $APP_DIR
          else 
            cd $APP_DIR
            git pull https://${G_TOKEN}@github.com/boburDev/sector-tech-backend.git main
          fi

          cd $APP_DIR

          echo 'PORT=${PORT}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_NAME=${{ secrets.DB_NAME }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_SECRET_USER=${{ secrets.JWT_SECRET_USER }}
          BASE_URL=${{ secrets.BASE_URL }}
          FACEBOOK_APP_ID=${{ secrets.FACEBOOK_APP_ID }}
          FACEBOOK_APP_SECRET=${{ secrets.FACEBOOK_APP_SECRET }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}
          FACEBOOK_CALLBACK_URL=${{ secrets.FACEBOOK_CALLBACK_URL }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          LINKEDIN_ID=${{ secrets.LINKEDIN_ID }}
          LINKEDIN_SECRET=${{ secrets.LINKEDIN_SECRET }}
          LINKEDIN_CALLBACK_URL=${{ secrets.LINKEDIN_CALLBACK_URL }}
          YANDEX_CLIENT_ID=${{ secrets.YANDEX_CLIENT_ID }}
          YANDEX_CLIENT_SECRET=${{ secrets.YANDEX_CLIENT_SECRET }}
          YANDEX_CALLBACK_URL=${{ secrets.YANDEX_CALLBACK_URL }}' > .env

          npm install
          npm run build

          pm2 delete sector_tech || true
          pm2 start dist/index.js --name sector_tech
          EOF
        shell: bash
